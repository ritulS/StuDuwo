# Front-End Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: {{.Values.frontend.replicas}}
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: {{.Values.frontend.image}}
        ports:
        - containerPort: {{.Values.frontend.containerPort}}
---
# Back-End Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: {{.Values.api.replicas}}
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: {{.Values.api.image.repository}}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: postgres-secret
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-secret
        - name: URI
          value: {{.Values.database.service.name}}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: seaweed-api-secret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: seaweed-api-secret
        - name: AWS_REGION
          value: us-east-1
        - name: SEAWEEDFS_S3
          value: seaweedfs-s3
        ports:
        - containerPort: {{.Values.api.containerPort}}
---
# postgres Deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: database-deployment
spec:
  replicas: {{.Values.database.replicas}}
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      volumes:
      - name: postgres-pv-storage
        persistentVolumeClaim:
          claimName: postgres-pv-claim
      containers:
      - name: database
        image: {{.Values.database.image}}
        volumeMounts:
          - name: postgres-pv-storage
            mountPath: /data/db
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: password
        ports:
        - containerPort: {{.Values.database.containerPort}}
---
# PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-storage
spec:
  storageClassName: local-path
  capacity:
    storage: {{.Values.database.persistentVolume.storage}}
  accessModes: 
    - ReadWriteMany
  hostPath:
    path: {{.Values.database.persistentVolume.hostPath}}
---
# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - {{.Values.database.accessModes}}
  resources:
    requests:
      storage: {{.Values.database.persistentVolumeClaim.storage}}
